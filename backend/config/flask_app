# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name sayver.org www.sayver.org;
    return 301 https://$host$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl;
    server_name sayver.org www.sayver.org;

    ssl_certificate /etc/letsencrypt/live/sayver.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sayver.org/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;  # Ensure Diffie-Hellman parameters are set

    # Additional server settings (static files, etc.)
    root /var/www/html;
    index login.html index.html;


    # Special no-buffer for camera stream
    location /api/live-camera-feed {
        proxy_pass http://unix:/run/gunicorn.sock;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        proxy_redirect off;

        proxy_buffering off;
        chunked_transfer_encoding on;

        proxy_read_timeout 3600;
        send_timeout 3600;
    }

    # Proxy API requests to Flask via Gunicorn (use only the Unix socket version)
    location /api/ {
        proxy_pass http://unix:/run/gunicorn.sock;

        # Forwarding headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Allow to show media pictures and video
    location ~ ^/media/(pictures|video)/ {
	autoindex on;
	root /var/www/html;
    }

    # Redirect root URL to login page
    location = / {
        return 302 /login.html;
    }

    # Serve static files (HTML, CSS, JS)
    location / {
        try_files $uri $uri/ =404;
    }
}
